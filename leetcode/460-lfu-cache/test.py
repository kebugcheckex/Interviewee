import unittest
from collections import namedtuple
from parameterized import parameterized

from solution import LFUCache

TestCase = namedtuple("TestCase", ("capacity", "operation", "parameters", "results"))

test_cases = [
    TestCase(
        10,
        [
            "put",
            "put",
            "put",
            "put",
            "put",
            "get",
            "put",
            "get",
            "get",
            "put",
            "get",
            "put",
            "put",
            "put",
            "get",
            "put",
            "get",
            "get",
            "get",
            "get",
            "put",
            "put",
            "get",
            "get",
            "get",
            "put",
            "put",
            "get",
            "put",
            "get",
            "put",
            "get",
            "get",
            "get",
            "put",
            "put",
            "put",
            "get",
            "put",
            "get",
            "get",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "get",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "get",
            "put",
            "get",
            "get",
            "get",
            "put",
            "get",
            "get",
            "put",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "put",
            "get",
            "get",
            "get",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "get",
            "get",
            "get",
            "put",
            "put",
            "put",
            "put",
            "get",
            "put",
            "put",
            "put",
            "put",
            "put",
            "put",
            "put",
        ],
        [
            [10, 13],
            [3, 17],
            [6, 11],
            [10, 5],
            [9, 10],
            [13],
            [2, 19],
            [2],
            [3],
            [5, 25],
            [8],
            [9, 22],
            [5, 5],
            [1, 30],
            [11],
            [9, 12],
            [7],
            [5],
            [8],
            [9],
            [4, 30],
            [9, 3],
            [9],
            [10],
            [10],
            [6, 14],
            [3, 1],
            [3],
            [10, 11],
            [8],
            [2, 14],
            [1],
            [5],
            [4],
            [11, 4],
            [12, 24],
            [5, 18],
            [13],
            [7, 23],
            [8],
            [12],
            [3, 27],
            [2, 12],
            [5],
            [2, 9],
            [13, 4],
            [8, 18],
            [1, 7],
            [6],
            [9, 29],
            [8, 21],
            [5],
            [6, 30],
            [1, 12],
            [10],
            [4, 15],
            [7, 22],
            [11, 26],
            [8, 17],
            [9, 29],
            [5],
            [3, 4],
            [11, 30],
            [12],
            [4, 29],
            [3],
            [9],
            [6],
            [3, 4],
            [1],
            [10],
            [3, 29],
            [10, 28],
            [1, 20],
            [11, 13],
            [3],
            [3, 12],
            [3, 8],
            [10, 9],
            [3, 26],
            [8],
            [7],
            [5],
            [13, 17],
            [2, 27],
            [11, 15],
            [12],
            [9, 19],
            [2, 15],
            [3, 16],
            [1],
            [12, 17],
            [9, 1],
            [6, 19],
            [4],
            [5],
            [5],
            [8, 1],
            [11, 7],
            [5, 2],
            [9, 28],
            [1],
            [2, 2],
            [7, 4],
            [4, 22],
            [7, 24],
            [9, 26],
            [13, 28],
            [11, 26],
        ],
        [
            -2,
            -2,
            -2,
            -2,
            -2,
            -1,
            -2,
            19,
            17,
            -2,
            -1,
            -2,
            -2,
            -2,
            -1,
            -2,
            -1,
            5,
            -1,
            12,
            -2,
            -2,
            3,
            5,
            5,
            -2,
            -2,
            1,
            -2,
            -1,
            -2,
            30,
            5,
            30,
            -2,
            -2,
            -2,
            -1,
            -2,
            -1,
            24,
            -2,
            -2,
            18,
            -2,
            -2,
            -2,
            -2,
            14,
            -2,
            -2,
            18,
            -2,
            -2,
            11,
            -2,
            -2,
            -2,
            -2,
            -2,
            18,
            -2,
            -2,
            -1,
            -2,
            4,
            29,
            30,
            -2,
            12,
            11,
            -2,
            -2,
            -2,
            -2,
            29,
            -2,
            -2,
            -2,
            -2,
            17,
            -1,
            18,
            -2,
            -2,
            -2,
            -1,
            -2,
            -2,
            -2,
            20,
            -2,
            -2,
            -2,
            29,
            18,
            18,
            -2,
            -2,
            -2,
            -2,
            20,
            -2,
            -2,
            -2,
            -2,
            -2,
            -2,
            -2,
        ],
    )
]


class TestSolution(unittest.TestCase):
    @parameterized.expand(test_cases)
    def test_case(self, capacity, operations, parameters, results):
        for test_case in test_cases:
            cache = LFUCache(capacity)
            for i in range(len(operations)):
                if operations[i] == "get":
                    result = cache.get(parameters[i][0])
                    self.assertEqual(result, results[i])
                elif operations[i] == "put":
                    cache.put(parameters[i][0], parameters[i][1])
                else:
                    raise Exception(f"Invalid operation {operations[i]}")


if __name__ == "__main__":
    unittest.main()
